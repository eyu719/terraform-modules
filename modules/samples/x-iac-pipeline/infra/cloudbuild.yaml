# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
steps:
  - id: "branch name"
    name: "alpine"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        echo "***********************"
        echo "$BRANCH_NAME"
        echo "***********************"
  - id: display-sa-token
    name: gcr.io/cloud-builders/gcloud-slim
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Fetch a GCP bearer token
        gcloud auth describe ${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com
  - id: "tf init"
    name: "hashicorp/terraform:1.1.6"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME
          terraform init -backend-config="bucket=${_TF_BUCKET}"
        else
          for dir in environments/*/
          do
            cd ${dir}
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFORM INIT ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform init -backend-config="bucket=${_TF_BUCKET}" || exit 1
            cd ../../
          done
        fi
  # [START tf-plan]
  - id: "tf plan"
    name: "hashicorp/terraform:1.1.6"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME
          terraform plan --var-file=./my-config.tfvars -var "apigee_project_id=${_APIGEE_PROJECT_ID}"  -var "host_project_id=${_HOST_PROJECT_ID}" -var "billing_account=${_BILLING_ID}"
        else
          for dir in environments/*/
          do
            cd ${dir}
            env=${dir%*/}
            env=${env#*/}
            echo ""
            echo "*************** TERRAFOM PLAN ******************"
            echo "******* At environment: ${env} ********"
            echo "*************************************************"
            terraform plan --var-file=./my-config.tfvars -var "apigee_project_id=${_APIGEE_PROJECT_ID}"  -var "host_project_id=${_HOST_PROJECT_ID}" -var "billing_account=${_BILLING_ID}"
            cd ../../
          done
        fi
  # [END tf-plan]
  # [START tf-apply]
  - id: "tf apply"
    name: "hashicorp/terraform:1.1.6"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        if [ -d "environments/$BRANCH_NAME/" ]; then
          cd environments/$BRANCH_NAME
          #export TF_LOG="TRACE"
          terraform apply -auto-approve --var-file=./my-config.tfvars -var "apigee_project_id=${_APIGEE_PROJECT_ID}" -var "host_project_id=${_HOST_PROJECT_ID}" -var "billing_account=${_BILLING_ID}"
        else
          echo "***************************** SKIPPING APPLYING *******************************"
          echo "Branch '$BRANCH_NAME' does not represent an oficial environment."
          echo "*******************************************************************************"
        fi
  # [END tf-apply]
timeout: 7200s
